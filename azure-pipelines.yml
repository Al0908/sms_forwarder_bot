trigger:
- master

pr:
- master

pool:
  vmImage: 'Ubuntu-16.04'
strategy:
  matrix:
    Python36:
      PYTHON_VERSION: '3.6'
  maxParallel: 3

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(PYTHON_VERSION)'
    architecture: 'x64'

- task: PythonScript@0
  displayName: 'Export project path'
  inputs:
    scriptSource: 'inline'
    script: |
      """Search all subdirectories for `manage.py`."""
      from glob import iglob
      from os import path
      # Python >= 3.5
      manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
      if not manage_py:
          raise SystemExit('Could not find a Django project')
      project_location = path.dirname(path.abspath(manage_py))
      print('Found Django project in', project_location)
      print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))

- script: |
    python -m pip install --upgrade pip setuptools wheel
    pip install -r requirements-dev.txt
    pip install unittest-xml-reporting pytest-azurepipelines
  displayName: 'Install prerequisites'

- script: |
    pushd '$(projectRoot)'
    PYTHONPATH=$projectRoot DJANGO_SETTINGS_MODULE=forwarder.settings DJANGO_DEBUG=True python -m pytest -s -vv --doctest-modules bot/tests.py
  displayName: 'Run tests'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: "**/TEST-*.xml"
    testRunTitle: 'Python $(PYTHON_VERSION)'
  condition: succeededOrFailed()
